apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-webserver
  labels:
    app: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  serviceName: airflow
  template:
    metadata:
      labels:
        app: airflow
        tier: webserver
    spec:
      serviceAccount: airflow
      imagePullSecrets:
      - name: gcr-puller
      securityContext:
        runAsUser: 0
      containers:
      - name: airflow-webserver
        args: ["webserver"]
        image: us.gcr.io/de-exam-kansinee/airflow:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8080
            protocol: TCP
        volumeMounts:
          - name: service-account
            mountPath: /temp/service_account
          - mountPath: /opt/airflow/dags
            name: airflow-dags
          - mountPath: /opt/airflow/logs
            name: airflow-logs
          - name: airflow-cfg-volume
            mountPath: /temp
          - name: airflow-config-files
            mountPath: /temp/config
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 100
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 2
      volumes:
        - name: service-account
          secret:
            secretName: service-account
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: airflow-cfg-volume
          configMap:
            name: airflow-configmap
            items:
            - key: airflow.cfg
              path: airflow.cfg
        - name: airflow-config-files
          secret:
            secretName: airflow-config-files